Starting audit...
[ERROR] /home/student/oop-tema1/./src/main/Main.java:9:8: Unused import - fileio.CardInput. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:12:8: Unused import - main.card.Card. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:13:8: Unused import - main.card.EnvironmentCard. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:15:8: Unused import - main.card.MinionCard. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:16:8: Unused import - main.command.Command. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:17:8: Unused import - main.command.GetPlayerDeck. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:21:8: Unused import - java.lang.reflect.InvocationTargetException. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:25:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:26:8: Unused import - java.util.stream.Collectors. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:4:8: Unused import - fileio.DecksInput. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:12:21: Variable 'cards' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:14:17: Parameter deckInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:24:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:28:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'setCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'setCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:28:26: Parameter cards should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerDeck.java:4:5: Class 'GetPlayerDeck' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerDeck' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/Command.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/command/Command.java:4:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:4:8: Unused import - main.card.Card. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:21:12: Variable 'player1' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:22:12: Variable 'player2' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:23:9: Variable 'player1DeckId' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:24:9: Variable 'player2DeckId' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:25:9: Variable 'turn' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:26:9: Variable 'playerTurn' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:27:20: Variable 'table' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:27:43: '4' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:27:46: '5' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:29:17: Parameter player1 should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:29:33: Parameter player2 should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:29:49: Parameter startGameInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:37: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:38: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:44:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayer1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayer1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:48:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayer2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayer2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:52:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayer1Deck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayer1Deck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:56:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayer2Deck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayer2Deck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:60:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:64:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:68:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:68:31: Parameter playerTurn should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:8:9: Variable 'mana' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:9:12: Variable 'description' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:10:14: Variable 'colors' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:12:17: Parameter mana should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:12:27: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:12:47: Parameter colors should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:12:64: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:19:17: Parameter cardInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:26:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:30:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:30:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:34:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:38:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:38:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:42:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:46:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:46:27: Parameter colors should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:50:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:54:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:54:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:58:12: Variable 'name' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:3:8: Unused import - com.fasterxml.jackson.annotation.JsonIgnoreProperties. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:10:9: Variable 'health' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:11:9: Variable 'attackDamage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:12:13: Variable 'frozen' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:13:20: Variable 'specialAbility' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:15:23: Parameter cardInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:21:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setSpecialAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setSpecialAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:21:35: Parameter specialAbility should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:25:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:29:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:29:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:33:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:37:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:37:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:41:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:45:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:45:27: Parameter frozen should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:49:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'useSpecialAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'useSpecialAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:49:35: Parameter target should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/SpecialAbility.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/SpecialAbility.java:6:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Shapeshift.java:7:21: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Shapeshift.java:7:42: Parameter target should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Skyjack.java:7:21: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Skyjack.java:7:42: Parameter target should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/GodsPlan.java:7:21: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/GodsPlan.java:7:42: Parameter target should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/WeakKnees.java:7:21: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/WeakKnees.java:7:42: Parameter target should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/EnvironmentCard.java:6:28: Parameter cardInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:6:9: Variable 'health' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:6:18: '30' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:8:21: Parameter mana should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:8:31: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:8:51: Parameter colors should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:8:68: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:12:21: Parameter cardInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:16:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:20:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:20:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:10:21: Variable 'decks' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:11:21: Variable 'hand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:12:14: Variable 'heroCard' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:13:9: Variable 'mana' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:15:19: Parameter decksInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:19:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:23:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:23:26: Parameter decks should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:27:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:31:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:32:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:32:20: '10' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:36:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHeroCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHeroCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:40:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHeroCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHeroCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:40:29: Parameter heroCard should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:44:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 120 errors.
