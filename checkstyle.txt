Starting audit...
[ERROR] /home/student/oop-tema1/./src/main/Main.java:9:8: Unused import - fileio.CardInput. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:12:8: Unused import - main.card.Card. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:13:8: Unused import - main.card.EnvironmentCard. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:15:8: Unused import - main.card.MinionCard. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:17:8: Unused import - main.command.GetPlayerDeck. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:19:8: Unused import - javax.swing.plaf.IconUIResource. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:22:8: Unused import - java.lang.reflect.InvocationTargetException. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:26:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/student/oop-tema1/./src/main/Main.java:27:8: Unused import - java.util.stream.Collectors. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:4:8: Unused import - fileio.DecksInput. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:15:21: Variable 'cards' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:17:17: Parameter deckInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:20:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:37:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:41:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'setCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'setCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Deck.java:41:26: Parameter cards should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerMana.java:8:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerMana.java:9:9: Variable 'playerIdx' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerMana.java:11:26: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerMana.java:11:37: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerMana.java:16:5: Class 'GetPlayerMana' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerMana' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerMana.java:17:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerMana.java:18:41: '?' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerDeck.java:7:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerDeck.java:8:9: Variable 'playerIdx' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerDeck.java:10:26: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerDeck.java:10:37: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerDeck.java:15:5: Class 'GetPlayerDeck' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerDeck' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerDeck.java:16:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/PlaceCard.java:10:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/PlaceCard.java:11:9: Variable 'handIdx' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/PlaceCard.java:13:22: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/PlaceCard.java:13:33: Parameter handIdx should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/PlaceCard.java:18:5: Class 'PlaceCard' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaceCard' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/PlaceCard.java:19:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/PlaceCard.java:20:52: '?' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/command/EndPlayerTurn.java:7:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/EndPlayerTurn.java:9:26: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/EndPlayerTurn.java:13:5: Class 'EndPlayerTurn' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EndPlayerTurn' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/EndPlayerTurn.java:14:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardAtPosition.java:5:8: Unused import - main.card.Card. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardAtPosition.java:9:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardAtPosition.java:10:9: Variable 'x' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardAtPosition.java:11:9: Variable 'y' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardAtPosition.java:13:30: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardAtPosition.java:13:41: Parameter x should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardAtPosition.java:13:48: Parameter y should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardAtPosition.java:19:5: Class 'GetCardAtPosition' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetCardAtPosition' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardAtPosition.java:20:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardAtPosition.java:25: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/student/oop-tema1/./src/main/command/UseEnvironmentCard.java:10:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/UseEnvironmentCard.java:11:9: Variable 'handIdx' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/UseEnvironmentCard.java:12:9: Variable 'affectedRow' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/UseEnvironmentCard.java:14:31: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/UseEnvironmentCard.java:14:42: Parameter handIdx should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/UseEnvironmentCard.java:14:55: Parameter affectedRow should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/UseEnvironmentCard.java:20:5: Class 'UseEnvironmentCard' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UseEnvironmentCard' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/UseEnvironmentCard.java:21:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/UseEnvironmentCard.java:22:52: '?' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/command/UseEnvironmentCard.java:40: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerTurn.java:7:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerTurn.java:9:26: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerTurn.java:13:5: Class 'GetPlayerTurn' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerTurn' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerTurn.java:14:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerHero.java:7:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerHero.java:8:9: Variable 'playerIdx' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerHero.java:10:26: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerHero.java:10:37: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerHero.java:15:5: Class 'GetPlayerHero' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerHero' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/GetPlayerHero.java:16:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/Command.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/command/Command.java:6:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsInHand.java:10:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsInHand.java:11:9: Variable 'playerIdx' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsInHand.java:13:27: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsInHand.java:13:38: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsInHand.java:18:5: Class 'GetCardsInHand' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetCardsInHand' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsInHand.java:19:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsOnTable.java:5:8: Unused import - main.card.Card. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsOnTable.java:7:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsOnTable.java:10:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsOnTable.java:12:28: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsOnTable.java:16:5: Class 'GetCardsOnTable' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetCardsOnTable' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/GetCardsOnTable.java:17:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetEnvironmentCardsInHand.java:8:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/command/GetEnvironmentCardsInHand.java:10:8: Unused import - java.util.stream.Collectors. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/command/GetEnvironmentCardsInHand.java:13:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetEnvironmentCardsInHand.java:14:9: Variable 'playerIdx' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetEnvironmentCardsInHand.java:16:38: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetEnvironmentCardsInHand.java:16:49: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetEnvironmentCardsInHand.java:21:5: Class 'GetEnvironmentCardsInHand' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetEnvironmentCardsInHand' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/GetEnvironmentCardsInHand.java:22:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetEnvironmentCardsInHand.java:23:52: '?' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/command/GetFrozenCardsOnTable.java:10:10: Variable 'game' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/command/GetFrozenCardsOnTable.java:12:34: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/command/GetFrozenCardsOnTable.java:16:5: Class 'GetFrozenCardsOnTable' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetFrozenCardsOnTable' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/command/GetFrozenCardsOnTable.java:17:25: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:7:20: Using the '.*' form of import should be avoided - main.command.*. [AvoidStarImport]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:9:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:10:8: Unused import - java.util.stream.Collectors. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:37:12: Variable 'player1' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:38:12: Variable 'player2' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:39:9: Variable 'player1DeckId' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:40:9: Variable 'player2DeckId' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:41:9: Variable 'turn' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:42:9: Variable 'round' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:43:9: Variable 'playerTurn' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:44:38: Variable 'table' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:46:17: Parameter player1 should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:46:33: Parameter player2 should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:46:49: Parameter startGameInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:59: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:60: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:66:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayer1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayer1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:70:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayer2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayer2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:74:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayer1Deck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayer1Deck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:78:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayer2Deck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayer2Deck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:82:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:86:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:90:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:90:31: Parameter playerTurn should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:94:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'endCurrentTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'endCurrentTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:95:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:98:39: '?' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:105:41: '10' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:113:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'isRowFull' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'isRowFull' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:113:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:113:30: Parameter row should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:114:41: '5' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:117:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'rowBelongsToEnemy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'rowBelongsToEnemy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:117:38: Parameter row should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:118:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:118:52: '3' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:120:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:125:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getMirrorRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getMirrorRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:125:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:125:29: Parameter row should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:126:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:127:30: '?' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:127:32: '3' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:128:24: '3' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:128:26: '?' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:131:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'placeCardOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'placeCardOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:131:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:131:34: Parameter card should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:131:51: Parameter row should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:135:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getCardsOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getCardsOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:139:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:139:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:139:41: Parameter affectedRow should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:143:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getCardAtPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getCardAtPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:143:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:143:41: Parameter x should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:143:48: Parameter y should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:151:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'removeDeadCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'removeDeadCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:151:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:160:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getCommandObject' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getCommandObject' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:160:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:160:37: Parameter actionsInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:181: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/student/oop-tema1/./src/main/Game.java:189:41: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:9:9: Variable 'mana' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:10:12: Variable 'description' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:11:14: Variable 'colors' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:12:12: Variable 'name' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:14:17: Parameter mana should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:14:27: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:14:47: Parameter colors should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:14:64: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:21:17: Parameter cardInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:28:19: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:28:20: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:30:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:34:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:34:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:38:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:42:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:42:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:46:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:50:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:50:27: Parameter colors should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:54:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:58:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:58:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:62:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'canBePlacedOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'canBePlacedOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:66:34: Parameter card should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:66:45: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:68:36: '?' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:69:11: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:70:36: '?' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/oop-tema1/./src/main/card/Card.java:70:38: '3' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:3:8: Unused import - com.fasterxml.jackson.annotation.JsonIgnoreProperties. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:10:9: Variable 'health' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:11:9: Variable 'attackDamage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:12:13: Variable 'frozen' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:13:20: Variable 'specialAbility' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:15:23: Parameter cardInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:21:23: Parameter card should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:31:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setSpecialAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setSpecialAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:31:35: Parameter specialAbility should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:35:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:39:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:39:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:43:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:47:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:47:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:51:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:55:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:55:27: Parameter frozen should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:59:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'removeHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'removeHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:59:30: Parameter health should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:59:34: 'health' hides a field. [HiddenField]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:63:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'useSpecialAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'useSpecialAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:63:35: Parameter target should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/MinionCard.java:67:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'canBePlacedOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'canBePlacedOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/SpecialAbility.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/SpecialAbility.java:6:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/HeartHound.java:10:5: Class 'HeartHound' looks like designed for extension (can be subclassed), but the method 'use' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeartHound' final or making the method 'use' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/HeartHound.java:11:21: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/HeartHound.java:11:32: Parameter affectedRow should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/HeartHound.java:15:32: Parameter o1 should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/HeartHound.java:15:47: Parameter o2 should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Shapeshift.java:7:21: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Shapeshift.java:7:42: Parameter target should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Winterfell.java:9:5: Class 'Winterfell' looks like designed for extension (can be subclassed), but the method 'use' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Winterfell' final or making the method 'use' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Winterfell.java:10:21: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Winterfell.java:10:32: Parameter affectedRow should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Firestorm.java:4:8: Unused import - main.card.Card. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Firestorm.java:10:5: Class 'Firestorm' looks like designed for extension (can be subclassed), but the method 'use' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Firestorm' final or making the method 'use' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Firestorm.java:11:21: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Firestorm.java:11:32: Parameter affectedRow should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/RowAbility.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/RowAbility.java:4:8: Unused import - main.card.Card. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/RowAbility.java:5:8: Unused import - main.card.MinionCard. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/RowAbility.java:7:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/RowAbility.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Skyjack.java:7:21: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/Skyjack.java:7:42: Parameter target should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/GodsPlan.java:7:21: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/GodsPlan.java:7:42: Parameter target should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/WeakKnees.java:7:21: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/ability/WeakKnees.java:7:42: Parameter target should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/EnvironmentCard.java:8:16: Variable 'rowAbility' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/EnvironmentCard.java:9:28: Parameter cardInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/EnvironmentCard.java:9:49: Parameter rowAbility should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/EnvironmentCard.java:14:5: Class 'EnvironmentCard' looks like designed for extension (can be subclassed), but the method 'useRowAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EnvironmentCard' final or making the method 'useRowAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/EnvironmentCard.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/card/EnvironmentCard.java:14:31: Parameter game should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/EnvironmentCard.java:14:42: Parameter affectedRow should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:6:9: Variable 'health' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:6:18: '30' is a magic number. [MagicNumber]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:8:21: Parameter mana should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:8:31: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:8:51: Parameter colors should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:8:68: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:12:21: Parameter cardInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:16:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:20:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/card/HeroCard.java:20:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:10:21: Variable 'decks' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:11:21: Variable 'hand' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:12:14: Variable 'heroCard' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:13:9: Variable 'mana' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:15:19: Parameter decksInput should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:19:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:23:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:23:26: Parameter decks should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:27:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:31:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:31:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:31:29: 'mana' hides a field. [HiddenField]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:35:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'removeMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'removeMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:35:28: Parameter mana should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:35:32: 'mana' hides a field. [HiddenField]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:39:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHeroCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHeroCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:43:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHeroCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHeroCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:43:29: Parameter heroCard should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:47:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:51:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addCardToHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addCardToHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:51:31: Parameter deckIdx should be final. [FinalParameters]
[ERROR] /home/student/oop-tema1/./src/main/Player.java:52:9: 'if' construct must use '{}'s. [NeedBraces]
Audit done.
Checkstyle ends with 290 errors.
